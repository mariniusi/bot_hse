#–±–ª–æ–∫ 1
from telebot import *

import requests
from requests import get


from pyowm import OWM


import sqlite3


from pycbrf.toolbox import ExchangeRates

from datetime import date


owm = OWM('33cf41809d5489af95160f6aa02859d7')
mgr = owm.weather_manager()


deadlines ={}

#–±–ª–æ–∫ 2
def adek(s):    #—Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≤–æ–¥–∞ –≤–≤–æ–¥–∏–º–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
    return s.lower()

#–≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–Ω—ã–µ
hello_text = '–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –Ω–µ–º–Ω–æ–≥–æ —É–ø—Ä–æ—Å—Ç–∏—Ç—å –¥–µ–ª–∞ ‚≠êÔ∏è'
main_menu_text = '–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å'
mistake_text = '–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —Ç—ã –∏–º–µ–µ—à—å –≤ –≤–∏–¥—É.'

task = ''

#–≤–≤–æ–¥–∏–º —Å–∞–º–æ–≥–æ –±–æ—Ç–∞
bot = telebot.TeleBot('6905070702:AAH3zTaXXhJwodcHMjTdrT5F5iLZn3l7EKk')


#–±–ª–æ–∫ 3
@bot.message_handler(commands=['help'])
def user(help):
    bot.send_message(help.chat.id, mistake_text)

@bot.message_handler(commands=['start'])
def user(message):
    st = adek(message.text)
    knop = telebot.types.ReplyKeyboardMarkup(resize_keyboard = True)
    knop.add(telebot.types.KeyboardButton('–ù–∞—á–Ω–µ–º!'))

    bot.send_message(message.chat.id, hello_text, reply_markup=knop)

    bot.send_photo(message.chat.id, get('https://i.pinimg.com/564x/59/f9/b2/59f9b2507ccd8bfcfd40a32f39a57373.jpg').content)

    bot.register_next_step_handler(message, menu)



#–±–ª–æ–∫ 4
@bot.message_handler(commands=['text'])
def menu(message):
    st = adek(message.text)
    if st == '–Ω–∞—á–Ω–µ–º!' or st == '–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        knop = types.ReplyKeyboardMarkup(resize_keyboard=True)
        but1 = types.KeyboardButton('–ø–æ–≥–æ–¥–∞ ‚õÖÔ∏è')
        but2 = types.KeyboardButton('–≤–∞–ª—é—Ç—ã üí∏')
        but3 = types.KeyboardButton('–¥–µ–¥–ª–∞–π–Ω—ã üö©')
        but4 = types.KeyboardButton('–ø–æ–º–æ—â—å üÜò')
        knop.add(but1, but2, but3, but4)
        bot.send_message(message.chat.id, main_menu_text, reply_markup=knop)
        bot.register_next_step_handler(message, choose)

    elif st == '/start':
        bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å –±–æ—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!')
        user(message)

    else:
        bot.send_message(message.chat.id, mistake_text)
        user(message)




@bot.message_handler()
#–±–ª–æ–∫ 5
def choose(message):
    st = adek(message.text)
    if st == '–ø–æ–≥–æ–¥–∞ ‚õÖÔ∏è':
        pogoda(message)
    elif st =='–≤–∞–ª—é—Ç—ã üí∏':
        summa(message)
    elif st == '–ø–æ–º–æ—â—å üÜò':
        help(message)
    elif st == '–¥–µ–¥–ª–∞–π–Ω—ã üö©':
        dead(message)
    elif st == '/start':
        bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å –±–æ—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!')
        user(message)
    else:
        bot.send_message(message.from_user.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞')
        user(message)
@bot.message_handler()
#–±–ª–æ–∫ 6
def pogoda(message):
    bot.send_photo(message.chat.id, get('https://i.pinimg.com/564x/0e/91/4d/0e914de3125362a619b969be10b291a7.jpg').content)
    bot.send_message(message.from_user.id, '–ü–æ–≥–æ–¥–∞ –≤ –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è?')
    bot.register_next_step_handler(message, get_weathers)

@bot.message_handler()
def get_weathers(message):
    city = adek(message.text)
    url = 'https://api.openweathermap.org/data/2.5/weather?q=' + city + '&units=metric&lang=ru&appid=33cf41809d5489af95160f6aa02859d7'

    try:
        if adek(message.text) == '/start':
            bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å –±–æ—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!')
            user(message)
        else:
            weather_data = requests.get(url).json()
            temperature = round(weather_data['main']['temp'])
            temperature_feels = round(weather_data['main']['feels_like'])

            information = '‚≠êÔ∏è –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –≥–æ—Ä–æ–¥–µ ' + city.title() + ': ' + str(temperature) + '¬∞C' '\n'
            information += '‚≠êÔ∏è –ü–æ –æ—â—É—â–µ–Ω–∏—è–º'  ': ' + str(temperature_feels) + '¬∞C' '\n'
            information += '' '\n'

            if temperature_feels <= -10:
                information += '‚ùóÔ∏è–û—á–µ–Ω—å —Ö–æ–ª–æ–¥–Ω–æ. –õ—É—á—à–µ –Ω–µ –≤—ã—Ö–æ–¥–∏—Ç—å –∏–∑ –¥–æ–º–∞ –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.'
            elif -10 < temperature_feels < 0:
                information += '‚ùó–•–æ–ª–æ–¥–Ω–æ. –ù–µ –∑–∞–±—É–¥—å –æ–¥–µ—Ç—å—Å—è —Ç–µ–ø–ª–µ–µ.'
            elif 0 <= temperature_feels < 10:
                information += '‚ùó–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å—Ç—Ä–µ–º–∏—Ç—Å—è –∫ –Ω—É–ª—é.'
            elif 10 <= temperature_feels <= 20:
                information += '‚ùó–ü—Ä–æ—Ö–ª–∞–¥–Ω–æ, –Ω–æ –ø—Ä–∏ —ç—Ç–æ–º –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ.'
            elif 20 < temperature_feels < 30:
                information += '‚ùó–û—Ç–ª–∏—á–Ω–∞—è –ø–æ–≥–æ–¥–∞ –¥–ª—è –ø—Ä–æ–≥—É–ª–∫–∏.'
            elif temperature_feels >= 30:
                information += '‚ùó–û—á–µ–Ω—å –∂–∞—Ä–∫–æ. –ù–µ –∑–∞–±—ã–≤–∞–π —Å–æ–±–ª—é–¥–∞—Ç—å –≤–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å!'
    except Exception:
        information = '‚ùó‚ùó–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å! ‚ùó‚ùó'

    bot.send_message(message.chat.id, information)
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = (telebot.types.KeyboardButton('—Å–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥'))
    btn2 = (telebot.types.KeyboardButton('–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))

    markup.add(btn1, btn2)

    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=markup)
    bot.register_next_step_handler(message, next_step)

def next_step(message):
    choice = adek(message.text)
    if choice == '—Å–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥':
        pogoda(message)

    elif choice == '–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        quit(message)

    elif choice == '/start':
        bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å –±–æ—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!')
        user(message)

    else:
        bot.send_message(message.chat.id, '‚ùó‚ùó–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å! ‚ùó‚ùó')
        pogoda(message)

def quit(message):
    menu(message)

#–±–ª–æ–∫ 7
@bot.message_handler()
def summa(message):
    bot.send_photo(message.chat.id, get('https://i.pinimg.com/564x/91/d0/56/91d05626656a100f22c9fb3fdfa4ae34.jpg').content)
    bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É (—Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º) –≤ —Ç–æ–π –≤–∞–ª—é—Ç–µ, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ ü§ë')
    bot.register_next_step_handler(message, summa_next)


def summa_next(message):
    global amount
    choice = adek(message.text)

    if choice == '/start':
        bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å –±–æ—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!')
        user(message)
    try:
        amount = int(message.text)
        if amount > 0:
            markup = types.ReplyKeyboardMarkup(row_width=3)
            but1 = types.InlineKeyboardButton('–¥–æ–ª–ª–∞—Ä')
            but2 = types.InlineKeyboardButton('–µ–≤—Ä–æ')
            but3 = types.InlineKeyboardButton('—é–∞–Ω—å ')
            but4 = types.InlineKeyboardButton('—Ñ—É–Ω—Ç')
            but5 = types.InlineKeyboardButton('–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')

            markup.add(but1, but2, but3, but4, but5)
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É!', reply_markup=markup)
            bot.register_next_step_handler(message, step_on)


        else:
            bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω–æ. –°—É–º–º–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π!')
            bot.register_next_step_handler(message, summa)

    except ValueError:
        bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω–æ. –¢—Ä–µ–±—É–µ—Ç—Å—è –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ!')
        bot.register_next_step_handler(message,summa_next)

def step_on(message):
    choice = adek(message.text)
    curs = ExchangeRates(str(date.today()))

    if choice == '–¥–æ–ª–ª–∞—Ä':
        result = curs['USD']
        text = str(date.today()) +'\n'
        text += '‚≠êÔ∏è –ö—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç ' + str(result.value) + ' RUB' +'\n'
        text += 'üí∏ –í–≤–µ–¥–µ–Ω–Ω–∞—è —Å—É–º–º–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç ' + str(round(result.value * amount)) + ' RUB'
        bot.send_message(message.chat.id, text)

        markup = types.ReplyKeyboardMarkup()
        but1 = types.InlineKeyboardButton('–ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –µ—â–µ')
        but2 = types.InlineKeyboardButton('–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')

        markup.add(but1, but2)
        bot.send_message(message.chat.id, '–ß—Ç–æ —Ç–µ–ø–µ—Ä—å?', reply_markup=markup)

        bot.register_next_step_handler(message, step_on1)


    elif choice == '–µ–≤—Ä–æ':
        result = curs['EUR']
        text = str(date.today()) + '\n'
        text += '‚≠êÔ∏è –ö—É—Ä—Å –µ–≤—Ä–æ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç ' + str(result.value) + ' RUB'  +'\n'
        text += 'üí∏ –í–≤–µ–¥–µ–Ω–Ω–∞—è —Å—É–º–º–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç ' + str(round(result.value * amount)) + ' RUB'

        bot.send_message(message.chat.id, text)

        markup = types.ReplyKeyboardMarkup()
        but1 = types.InlineKeyboardButton('–ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –µ—â–µ')
        but2 = types.InlineKeyboardButton('–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')

        markup.add(but1, but2)
        bot.send_message(message.chat.id, '–ß—Ç–æ —Ç–µ–ø–µ—Ä—å?', reply_markup=markup)
        bot.register_next_step_handler(message, step_on1)


    elif choice == '—é–∞–Ω—å':
        result = curs['CNY']
        a = str(result.value)
        text = str(date.today()) + '\n'
        text += '‚≠ê –ö—É—Ä—Å —é–∞–Ω—è —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç ' + a + ' RUB'  +'\n'
        text += 'üí∏ –í–≤–µ–¥–µ–Ω–Ω–∞—è —Å—É–º–º–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç ' + str(round(result.value * amount)) + ' RUB'

        bot.send_message(message.chat.id, text)

        markup = types.ReplyKeyboardMarkup()
        but1 = types.InlineKeyboardButton('–ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –µ—â–µ')
        but2 = types.InlineKeyboardButton('–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')

        markup.add(but1, but2)
        bot.send_message(message.chat.id, '–ß—Ç–æ —Ç–µ–ø–µ—Ä—å?', reply_markup=markup)

        bot.register_next_step_handler(message, step_on1)


    elif choice == '—Ñ—É–Ω—Ç':
        result = curs['GBP']
        text = str(date.today()) + '\n'
        text += '‚≠ê –ö—É—Ä—Å —Ñ—É–Ω—Ç–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç ' + str(result.value) + ' RUB'  +'\n'
        text += 'üí∏ –í–≤–µ–¥–µ–Ω–Ω–∞—è —Å—É–º–º–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç ' + str(round(result.value * amount)) + ' RUB'

        bot.send_message(message.chat.id, text)

        markup = types.ReplyKeyboardMarkup()
        but1 = types.InlineKeyboardButton('–ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –µ—â–µ')
        but2 = types.InlineKeyboardButton('–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')

        markup.add(but1, but2)
        bot.send_message(message.chat.id, '–ß—Ç–æ —Ç–µ–ø–µ—Ä—å?', reply_markup=markup)

        bot.register_next_step_handler(message, step_on1)

    elif choice == '–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        quit(message)

    elif choice == '/start':
        bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å –±–æ—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!')
        user(message)

    else:
        bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω–æ - –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–∞–º–∏!')
        summa_next(message)
def step_on1(message):
    choice = adek(message.text)
    if choice == '–ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –µ—â–µ':
        summa(message)

    elif choice == '–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        quit(message)

    elif choice == '/start':
        bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å –±–æ—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!')
        user(message)

    else:
        bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω–æ - –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–∞–º–∏!')
        summa(message)


#–±–ª–æ–∫ 8
def help(message):
    markup = types.ReplyKeyboardMarkup()
    but1 = types.InlineKeyboardButton('—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å?')
    but2 = types.InlineKeyboardButton('–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    markup.add(but1, but2)

    bot.send_photo(message.chat.id, get('https://medialeaks.ru/wp-content/uploads/2020/06/annotacziya-2020-06-11-143333.jpg').content)

    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –∫–Ω–æ–ø–∫—É', reply_markup=markup)
    bot.register_next_step_handler(message, step_on2)

def step_on2(message):
    choice = adek(message.text)
    if choice =='–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        quit(message)
    elif choice == '—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å?':
        text = '–Ø - –±–æ—Ç, –∏ —è –±—ã–ª —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã ' +'\n'
        text += '–ø–æ–º–æ—á—å —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏' +'\n'
        text += '' +'\n'
        text += '–Ø —É–º–µ—é:'+'\n'
        text += 'üçÑ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –ª—é–±–æ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ' +'\n'
        text += ''+'\n'
        text += 'üçÑ –ü–µ—Ä–µ–≤–æ–¥–∏—Ç—å –¥–æ–ª–ª–∞—Ä—ã, –µ–≤—Ä–æ, —Ñ—É–Ω—Ç—ã –∏ —é–∞–Ω–∏ –≤ —Ä—É–±–ª–∏ '+'\n'
        text += '- –æ–±—Ä–∞—Ç–Ω–æ –ø–æ–∫–∞ –Ω–µ —É–º–µ—é, –Ω–æ —Å–∫–æ—Ä–æ –Ω–∞—É—á—É—Å—å' +'\n'
        text += '' +'\n'
        text += 'üçÑ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–≤–æ–∏—Ö –¥–µ–¥–ª–∞–π–Ω–æ–≤, '  +'\n'
        text += '–∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –º–æ–∂–µ—à—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å,' +'\n'
        text += '—É–¥–∞–ª—è—è –∏ –¥–æ–±–∞–≤–ª—è—è –Ω–æ–≤—ã–µ' '\n'


        bot.send_message(message.chat.id, text)
        bot.register_next_step_handler(message, step_on3)

    elif choice == '/start':
        bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å –±–æ—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!')
        user(message)


def step_on3(message):
    choice = adek(message.text)
    if choice == '–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        quit(message)
    elif choice == '—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å?':
        step_on2(message)

    elif choice == '/start':
        bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å –±–æ—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!')
        user(message)

    else:
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–∞–º–∏')
        bot.register_next_step_handler(message, step_on2)

#–±–ª–æ–∫ 9
@bot.message_handler(commands=['text'])
def dead(message):

        knop = types.ReplyKeyboardMarkup(resize_keyboard=True)
        but1 = types.KeyboardButton('–¥–æ–±–∞–≤–∏—Ç—å –¥–µ–¥–ª–∞–π–Ω')
        but2 = types.KeyboardButton('—É–¥–∞–ª–∏—Ç—å –¥–µ–¥–ª–∞–π–Ω—ã')
        but3 = types.KeyboardButton('–ø–æ–∫–∞–∑–∞—Ç—å –¥–µ–¥–ª–∞–π–Ω—ã')
        but4 = types.KeyboardButton('–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')

        knop.add(but1, but2, but3, but4)
        bot.send_photo(message.chat.id, get('https://i.pinimg.com/564x/df/e6/fd/dfe6fd9d64c7702febd24e50153525e3.jpg').content)

        bot.send_message(message.chat.id, '–ß—Ç–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–¥–µ–ª–∞—Ç—å?', reply_markup=knop)

        bot.register_next_step_handler(message, dead1)


def dead1(message):
    connection = sqlite3.connect('dead.sql')
    connect = connection.cursor()

    connect.execute('CREATE TABLE IF NOT EXISTS tasks (id int auto_increment primary key, date varchar(15), task varchar (50))')

    connection.commit()
    connect.close()
    connection.close()

    choice = adek(message.text)
    if choice == '–¥–æ–±–∞–≤–∏—Ç—å –¥–µ–¥–ª–∞–π–Ω':
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –∑–∞–¥–∞—á—É')
        bot.register_next_step_handler(message, dead2)

    elif choice == '–ø–æ–∫–∞–∑–∞—Ç—å –¥–µ–¥–ª–∞–π–Ω—ã':
        show(message)

    elif choice == '—É–¥–∞–ª–∏—Ç—å –¥–µ–¥–ª–∞–π–Ω':
        delete(message)


    elif choice == '–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        quit(message)

    elif choice == '/start':
        bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å –±–æ—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!')
        user(message)

    else:
        bot.send_message(message.chat.id, mistake_text)
        dead(message)

def dead2(message):
    global task
    task = adek(message.text)


    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –¥–∞—Ç—É –¥–µ–¥–ª–∞–π–Ω–∞')
    bot.register_next_step_handler(message, dead3)


def dead3(message):
    date = adek(message.text)

    connection = sqlite3.connect('dead.sql')
    connect = connection.cursor()


    connect.execute(f'INSERT INTO tasks (task, date) VALUES ("{task}", "{date}")')

    connection.commit()
    connect.close()
    connection.close()

    bot.send_message(message.chat.id, '–∑–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞!')


    knop = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton('–¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ –¥–µ–¥–ª–∞–π–Ω')
    but2 = types.KeyboardButton('—É–¥–∞–ª–∏—Ç—å –¥–µ–¥–ª–∞–π–Ω')
    but3 = types.KeyboardButton('–ø–æ–∫–∞–∑–∞—Ç—å –¥–µ–¥–ª–∞–π–Ω—ã')
    but4 = types.KeyboardButton('–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')

    knop.add(but1, but2, but3, but4)
    bot.send_message(message.chat.id, '–ß—Ç–æ —Ç–µ–ø–µ—Ä—å?', reply_markup=knop)

    bot.register_next_step_handler(message, dead4)


def dead4(message):
    choice = adek(message.text)
    if choice =='–¥–æ–±–∞–≤–∏—Ç—å –¥–µ–¥–ª–∞–π–Ω' or choice =='—É–¥–∞–ª–∏—Ç—å –¥–µ–¥–ª–∞–π–Ω'  or choice == '–ø–æ–∫–∞–∑–∞—Ç—å –¥–µ–¥–ª–∞–π–Ω—ã':
        dead1(message)
    elif choice =='–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        quit(message)

    elif choice == '/start':
        bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å –±–æ—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!')
        user(message)

    else:
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–Ω–æ–ø–∫–∞–º–∏')
        bot.register_next_step_handler(message, dead)


@bot.callback_query_handler(func=lambda call: True)
def show(message):
    try:
        connection = sqlite3.connect('dead.sql')
        connect = connection.cursor()

        connect.execute('SELECT * FROM tasks')

        tasks = connect.fetchall()

        text = ''
        a = '–¢–≤–æ–∏ –¥–µ–¥–ª–∞–π–Ω—ã' + '\n'
        k = ''
        a = a+k

        b = connect.execute("select count(*) from tasks")
        c = connect.fetchone()

        for i in range(1, int(c[0]) + 1):
            for el in tasks:

                if el[1] != '':
                    if not(str(i)+') ' in text):
                        if not (str(el[1]) in text):
                            text +=  f'{str(i) + ") " + el[1]+ " - "}{el[2]} \n'


        connect.close()
        connection.close()
        bot.send_message(message.chat.id, a)
        bot.send_message(message.chat.id, text)
        bot.register_next_step_handler(message, dead4)

    except Exception:
        bot.send_message(message.chat.id, '–î–µ–¥–ª–∞–π–Ω–æ–≤ –Ω–µ—Ç. –°–∞–º–æ–µ –≤—Ä–µ–º—è –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ')
        dead(message)

@bot.message_handler(commands=['text'])
def delete(message):
    knop = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton('–æ—á–∏—Å—Ç–∏—Ç—å –¥–µ–¥–ª–∞–π–Ω—ã')
    but2 = types.KeyboardButton('–Ω–∞–∑–∞–¥')


    knop.add(but1, but2)
    bot.send_message(message.chat.id, '–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å?',reply_markup=knop)
    bot.register_next_step_handler(message, delete1)

def delete1(message):
    choice = adek(message.text)
    if choice == '–æ—á–∏—Å—Ç–∏—Ç—å –¥–µ–¥–ª–∞–π–Ω—ã':
        conn = sqlite3.connect('dead.sql')
        cur = conn.cursor()

        cur.execute('DELETE FROM tasks;')
        conn.commit()
        conn.close()
        bot.send_message(message.chat.id, '–°—É–ø–µ—Ä! - –≤—Å–µ –¥–µ–¥–ª–∞–π–Ω—ã –æ—á–∏—â–µ–Ω—ã')
        dead(message)

    elif choice =='–Ω–∞–∑–∞–¥':
        dead(message)

    elif choice == '/start':
        bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å –±–æ—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!')
        user(message)



bot.polling(none_stop=True)

